#!/bin/bash

# Pedir al usuario que elija una opción
echo "Elige una opción:"
echo "1. Configuración completa (primera vez)"
echo "2. Solo inicialización del servidor de desarrollo"
read -p "Introduce el número de la opción elegida: " option

# Si el usuario elige la opción 1, realiza la configuración completa
if [[ $option -eq 1 ]]; then
    # Pedir al usuario la información necesaria para la cadena de conexión SQL
    echo "Por favor, ingresa la información para la cadena de conexión SQL."

    # Pedir usuario de la base de datos
    echo "Usuario de la base de datos:"
    read dbUser

    # Pedir contraseña de la base de datos
    echo "Contraseña de la base de datos:"
    read -s dbPassword  # -s para ocultar la contraseña

    # Pedir host de la base de datos
    echo "Host de la base de datos:"
    read dbHost

    # Pedir puerto de la base de datos
    echo "Puerto de la base de datos:"
    read dbPort

    # Pedir nombre de la base de datos
    echo "Nombre de la base de datos:"
    read dbName

    # Construir la cadena de conexión SQL
    sqlConnectionString="mysql://$dbUser:$dbPassword@$dbHost:$dbPort/$dbName"

    # Contenido del archivo .env
    envContent="PORT=3000
    DATABASE_URL=\"$sqlConnectionString\"
    PRISMA_SCHEMA=src/db/schema.prisma"

    echo "Configurando servidor. Por favor, espere..."

    # Crear archivo .env
    currentPath=$(pwd)
    envFilePath="$currentPath/.env"
    echo "$envContent" > "$envFilePath"
    echo "Archivo .env creado"

    # Verificar si bun está instalado
    if ! command -v bun &> /dev/null; then
        echo "Bun no está instalado. Procediendo a la instalación..."
        curl -fsSL https://bun.sh/install | bash
        echo "Bun ha sido instalado con éxito."
    else
        # Si Bun ya está instalado, verifica la versión de bun
        bunVersion=$(bun --version)
        echo "Bun ya está instalado. Versión: $bunVersion"
    fi

    # Instalar dependencias
    echo "Instalando dependencias..."
    bun install
    echo "Dependencias instaladas."

    # Ejecutar migraciones de desarrollo
    bun prisma migrate dev
    echo "Migraciones ejecutadas con éxito."

    # Generar cliente de prisma
    bun prisma generate
    echo "Cliente generado con éxito"
fi

# Inicializar servidor de desarrollo
echo "Inicializando servidor de desarrollo..."
bun --watch ./server.ts
