{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"Name": {
						"type": "string"
					},
					"LastName": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"Email": {
						"type": "string"
					},
					"Password": {
						"type": "string"
					},
					"Role": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"Name",
					"LastName",
					"UserName",
					"Email",
					"Password",
					"Role"
				],
				"type": "object",
				"additionalProperties": true
			},
			"PrismaError": {
				"properties": {
					"code": {
						"type": "string"
					},
					"meta": {
						"anyOf": [
							{
								"type": "string"
							},
							{}
						]
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"code",
					"meta",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UserCollectionResponse": {
				"properties": {
					"userCount": {
						"type": "number",
						"format": "double"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array",
						"nullable": true
					},
					"error": {
						"$ref": "#/components/schemas/PrismaError"
					}
				},
				"required": [
					"userCount",
					"users"
				],
				"type": "object",
				"additionalProperties": true
			},
			"SafeUser": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"Name": {
						"type": "string"
					},
					"LastName": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"Email": {
						"type": "string"
					},
					"Role": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"Name",
					"LastName",
					"UserName",
					"Email",
					"Role"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UserResponse": {
				"description": "Represents the response from a request to retrieve a user by their ID.",
				"properties": {
					"user": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SafeUser"
							}
						],
						"nullable": true,
						"description": "The user data, or `null` if no user was found."
					},
					"error": {
						"properties": {
							"message": {
								"type": "string"
							}
						},
						"required": [
							"message"
						],
						"type": "object",
						"description": "Optional error object containing information about any error that occurred during the request."
					}
				},
				"required": [
					"user"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UserCreationResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"newUser": {
						"$ref": "#/components/schemas/SafeUser"
					}
				},
				"required": [
					"message",
					"newUser"
				],
				"type": "object",
				"additionalProperties": true
			},
			"NewUser": {
				"properties": {
					"Name": {
						"type": "string"
					},
					"LastName": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"Email": {
						"type": "string"
					},
					"Role": {
						"type": "number",
						"format": "double"
					},
					"Password": {
						"type": "string"
					}
				},
				"required": [
					"Name",
					"LastName",
					"UserName",
					"Email",
					"Role",
					"Password"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UserDeletedResponse": {
				"properties": {
					"message": {
						"type": "string",
						"nullable": true
					},
					"user": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SafeUser"
							}
						],
						"nullable": true
					},
					"error": {
						"$ref": "#/components/schemas/PrismaError"
					}
				},
				"required": [
					"message",
					"user"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "Opus REST API",
		"version": "1.0.0",
		"description": "REST API for the social media Opus, a place where you can talk about technology.",
		"contact": {}
	},
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "- A promise that resolves to a    object containing an array of users and the user count, or null in case of  an error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserCollectionResponse"
								}
							}
						}
					}
				},
				"description": "Retrieves a list of all users and the total user count.",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/UserCreationResponse"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Creates a new user.",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "The data of the new user.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewUser",
								"description": "The data of the new user."
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "- A promise that resolves to a    object containing the user data if found, or an error message otherwise.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"description": "Retrieves a specified user by their ID",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "- The ID of the user to retrieve.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates an existent user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The id of the user to be updated",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "The new data of the user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object",
								"description": "The new data of the user"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDeletedResponse"
								}
							}
						}
					}
				},
				"description": "Deletes an existent user.",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID related to the user.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "https://localhost:4000/"
		}
	]
}