{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserCreationParams": {
				"description": "This User representation is supposted to be used in the creation method\r\nin the UsersController.",
				"properties": {
					"name": {
						"type": "string",
						"description": "User's real name"
					},
					"username": {
						"type": "string",
						"description": "The name that will be displayed in the UI"
					},
					"lastname": {
						"type": "string",
						"description": "User's lastname"
					},
					"email": {
						"type": "string",
						"description": "The email the user usted to register his account"
					},
					"role": {
						"type": "integer",
						"format": "int32",
						"description": "His role in the Platform could be normal user or mod"
					},
					"password": {
						"type": "string",
						"description": "The password that the user creates to authenticate with the \r\nsocial media."
					}
				},
				"required": [
					"name",
					"username",
					"lastname",
					"email",
					"role",
					"password"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "Opus REST API",
		"version": "1.0.0",
		"description": "REST API for the social media Opus, a place where you can talk about technology.",
		"contact": {}
	},
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Gets a list with all of the users",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"Role": {
											"type": "number",
											"format": "double"
										},
										"Password": {
											"type": "string"
										},
										"Email": {
											"type": "string"
										},
										"UserName": {
											"type": "string"
										},
										"LastName": {
											"type": "string"
										},
										"Name": {
											"type": "string"
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"Role",
										"Password",
										"Email",
										"UserName",
										"LastName",
										"Name",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Creates a new user.",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "The data of the new user.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationParams",
								"description": "The data of the new user."
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Get an specified user by ID",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "ID of the user.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates an existent user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The id of the user to be updated",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "The new data of the user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"description": "The new data of the user"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Deletes an existent user.",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID related to the user.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "https://localhost:4000/"
		}
	]
}